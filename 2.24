*2.24 (Financial application: monetary units) Rewrite Listing 2.10,
ComputeChange.java, to fix the possible loss of accuracy when converting a
double value to an int value. Enter the input as an integer whose last two digits
represent the cents. For example, the input 1156 represents 11 dollars and 56 cents.

import java.util.Scanner;

public class java { 
  public static void main(String[] args){ 
  Scanner input = new Scanner(System.in);
  System.out.print("Enter an amount:");  

int amount = input.nextInt();
  int remainingAmount = amount;
  int numberOfOneDollars = remainingAmount / 100;
  remainingAmount = remainingAmount % 100;
  
  int numberOfQuarters = remainingAmount / 25;
  remainingAmount = remainingAmount % 25;

  int numberOfDimes = remainingAmount / 10;
  remainingAmount = remainingAmount % 10;

  int numberOfNickels = remainingAmount / 5;
  remainingAmount = remainingAmount % 5;

  int numberOfPennies = remainingAmount;

  System.out.println("Your amount " + amount + " consists of \n" +
    "\t" + numberOfOneDollars + " dollars\n" +
    "\t" + numberOfQuarters + " quarters\n" +
    "\t" + numberOfDimes + " dimes\n" +
    "\t" + numberOfNickels + " nickels\n" +
    "\t" + numberOfPennies + " pennies" );    

 } 
}
